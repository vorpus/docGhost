{"version":3,"sources":["webpack:///webpack/bootstrap a9fe52a2ed2551a4060f","webpack:///./src/main.js","webpack:///./src/dom_node_collection.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,iBAAiB;AAClC,oCAAmC,sCAAsC;AACzE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,oBAAmB;AACnB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;;;;;;AC9DA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,wBAAuB,qCAAqC;AAC5D;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,0CAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,0CAAyC,QAAQ;AACjD;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;;AAEA;;AAEA","file":"./docGhost.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a9fe52a2ed2551a4060f","const DOMNodeCollection = require('./dom_node_collection.js');\n\nlet ready = false;\nconst functions = [];\n\nfunction $l (selector) {\n  if (selector instanceof Function) {\n    if (ready) {\n      selector();\n    } else {\n      functions.push(selector);\n    }\n  } else if (selector instanceof HTMLElement) {\n    return new DOMNodeCollection([selector]);\n  } else if (typeof selector === \"string\") {\n    const nodeList = Array.prototype.slice.call(document.querySelectorAll(selector));\n    return new DOMNodeCollection(nodeList);\n  }\n}\n\nconst executeFunctions = function() {\n  ready = true;\n  for (let i = 0; i < functions.length; i++) {\n    functions[i]();\n  }\n};\n\nwindow.$l = $l;\ndocument.addEventListener(\"DOMContentLoaded\", executeFunctions);\n\n$l.extend = function () {\n  let args = Array.from(arguments);\n  let newObj = {};\n  for (let i = 0; i < args.length; i++) {\n    for (let attrname in args[i]) { newObj[attrname] = args[i][attrname]; }\n  }\n  return newObj;\n};\n\n$l.ajax = function (options) {\n  let defaultOptions = {\n    dataType: 'json',\n    method: 'GET',\n    success: () => {},\n    error: () => {},\n    url: 'http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=bcb83c4b54aee8418983c2aff3073b3b'\n  };\n\n  const newObj = this.extend(defaultOptions, options);\n  const xhr = new XMLHttpRequest();\n\n  xhr.open(newObj.method, newObj.url);\n\n  xhr.onload = function () {\n    if (xhr.status === 200) {\n      newObj.success(xhr.response);\n    } else {\n      newObj.error(xhr.response);\n    }\n  };\n\n  xhr.send(newObj);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.js\n// module id = 0\n// module chunks = 0","class DOMNodeCollection {\n  constructor(HTMLElements) {\n    this.elements = HTMLElements;\n  }\n\n  get(el) {\n    return this.elements[el];\n  }\n\n  each(cb) {\n    this.elements.forEach(cb);\n  }\n\n  html(string) {\n    if (string === undefined) {\n      return this.elements[0].innerHTML;\n    } else {\n      this.each( (element) => {\n        element.innerHTML = string;\n      });\n    }\n  }\n\n  empty() {\n    this.each( (element) => {\n      $l(element).html(\"\");\n    });\n  }\n\n  append(elementToAppend) {\n    if (elementToAppend instanceof DOMNodeCollection) {\n      this.each((element) => {\n        for (let j = 0; j < elementToAppend.elements.length; j++) {\n          element.appendChild(elementToAppend.elements[j].cloneNode(true));\n        }\n      });\n    } else if (elementToAppend instanceof HTMLElement) {\n      this.append($l(elementToAppend));\n    } else if (typeof elementToAppend === 'string') {\n      this.each( (element) =>  element.innerHTML += elementToAppend );\n    }\n    return this.elements;\n  }\n\n  attr(key, val) {\n    if (typeof val === 'string') {\n      this.each( (element) => element.setAttribute(key, val) );\n    } else {\n      return this.elements[0].getAttribute(key);\n    }\n  }\n\n  addClass(classToAdd) {\n    this.each( (element) => element.classList.add(classToAdd));\n  }\n\n  removeClass(classToRemove) {\n    this.each( (element) => element.classList.remove(classToRemove));\n  }\n\n  children() {\n    let childNodes = [];\n    this.each( (element) => {\n      const childNodeList = element.children;\n      childNodes = childNodes.concat(Array.from(childNodeList));\n    });\n    return new DOMNodeCollection(childNodes);\n  }\n\n  parent() {\n    let parentNodes = [];\n    this.each( (element) => {\n      parentNodes = parentNodes.concat(element.parentNode);\n    });\n    return new DOMNodeCollection(parentNodes);\n  }\n\n  find(selector) {\n    let found = [];\n    this.each( (element) => {\n      found = found.concat(Array.from(element.querySelectorAll(selector)));\n    });\n    return new DOMNodeCollection(found);\n  }\n\n  remove() {\n    this.each( (element) => {\n      element.parentNode.removeChild(element)\n    });\n  }\n\n  on(handler, cb) {\n    this.each( (element) => {\n      element.addEventListener(handler, cb);\n      const eventKey = `docGhostEvents-${handler}`;\n      if (typeof element[eventKey] === \"undefined\") {\n        element[eventKey] = [];\n      }\n      element[eventKey].push(cb);\n    });\n  }\n\n  off(handler) {\n    this.each( (element) => {\n      const eventKey = `docGhostEvents-${handler}`;\n      if (element[eventKey]) {\n        element[eventKey].forEach(cb => {\n          element.removeEventListener(handler, cb);\n        });\n      }\n      element[eventKey] = [];\n    });\n  }\n\n}\n\nmodule.exports = DOMNodeCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/dom_node_collection.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}